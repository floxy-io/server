load_module /usr/lib/nginx/modules/ngx_stream_module.so;

events {}

stream {

    upstream floxy-tcp {
      least_conn;
      server 127.0.0.1:3333 max_fails=15 fail_timeout=10s;
    }

   server {

    proxy_pass floxy-tcp;

    listen 444 ssl;
    ssl_certificate /etc/letsencrypt/live/floxy.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/floxy.io/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
  }
}


http {
  include  /etc/nginx/mime.types;
  default_type application/octet-stream;
  upstream floxy-server {
    least_conn;
    server 127.0.0.1:8080 max_fails=15 fail_timeout=10s;
  }

  upstream floxy-registry {
    least_conn;
    server 127.0.0.1:5000 max_fails=15 fail_timeout=10s;
  }

   server {
    server_name registry.floxy.io;

    if ($request_method !~ ^(GET|HEAD)$ ) {
       return 444;
    }

    location /v2/ {
      proxy_pass http://floxy-registry/v2/;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/floxy.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/floxy.io/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
  }


  server {
    server_name floxy.io;

    location /internal/ {
        return 400;
    }


    location / {
      proxy_pass http://floxy-server;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/floxy.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/floxy.io/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
  }

  server {
    listen      80;
    server_name *.floxy.io;

     #Rewrite all nonssl requests to ssl.
     return 301 https://$host$request_uri;
   }
}